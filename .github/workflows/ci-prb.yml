name: PR Builder
on:
  pull_request:
    branches: [ main ]
jobs:
  build:
    name: Build JDK ${{ matrix.java }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        java: [ 8, 11 ]
        os: [ ubuntu-latest ]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Print JDK Version
        run: java -version
      - name: Make gradlew Executable
        run: chmod +x gradlew
      - name: Cache Gradle Packages
        uses: actions/cache@v2.1.4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      # https://github.community/t/error-the-paging-file-is-too-small-for-this-operation-to-complete/17141
      - name: Configure Windows Pagefile
        if: ${{ runner.os == 'Windows' }}
        # v1.2
        uses: al-cheb/configure-pagefile-action@7e234852c937eea04d6ee627c599fb24a5bfffee
        with:
          minimum-size: 8GB
          maximum-size: 16GB
      - name: Build and Test
        env:
          CI: true
          JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF-8
        run: |
          # Build arguments to feed to the single gradlew publish command
          if [ "${{ matrix.java }}" = "8" ]; then
            FIRST_GRADLE_TARGETS=" clean check"
            SECOND_GRADLE_TARGETS=" publish"
          else
            FIRST_GRADLE_TARGETS=""
            SECOND_GRADLE_TARGETS=""

            # Execute the printJavaTargetCompatibility task to get the java target compatibility for each subproject
            # and extract the projects that require jdk9+.
            while read -r line
            do
              javaTarget=$(echo "$line" | sed -e 's/^version: \(.*\) name:.*/\1/g')
              if [ "$javaTarget" = "1.9" ] || [ "$javaTarget" = "1.10" ] || [ "$javaTarget" -gt "8" ] 2> /dev/null
              then
                currDir=$(echo "$line" | sed -e 's/^version:.* name: \(.*\)$/\1/g')
                FIRST_GRADLE_TARGETS="$FIRST_GRADLE_TARGETS :$currDir:clean :$currDir:check"
                SECOND_GRADLE_TARGETS="$SECOND_GRADLE_TARGETS :$currDir:publish"
              fi
            done < <(./gradlew printJavaTargetCompatibility)
          fi

          echo "FIRST_GRADLE_TARGETS: FIRST_GRADLE_TARGETS"
          echo "SECOND_GRADLE_TARGETS: $SECOND_GRADLE_TARGETS"
      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results-${{ matrix.os }}-${{ matrix.java }}
          path: '**/build/test-results/test/TEST-*.xml'
